{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caspar\\\\Desktop\\\\static-website\\\\src\\\\components\\\\countdown\\\\Countdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Countdown = ({\n  targetDate,\n  onEnd,\n  className: extraClasses = \"\",\n  size = \"md\"\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n  const memoizedClasses = useMemo(() => classNames(\n  // Add your base classes for the countdown timer here\n  \"rounded-lg font-bold justify-center text-center overflow-hidden transition\",\n  // Add a function to determine the size similar to buttonSizes if needed\n  extraClasses), [size, extraClasses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: memoizedClasses,\n    children: timeLeft ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(timeLeft).map(interval => {\n        if (!timeLeft[interval]) {\n          return \"00\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-bold mx-1\",\n          children: [timeLeft[interval], \" \", interval]\n        }, interval, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Time's up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"r5EnQ5rX+x9TeapxtQZnUzWhSgc=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","classNames","jsxDEV","_jsxDEV","Countdown","targetDate","onEnd","className","extraClasses","size","_s","timeLeft","setTimeLeft","calculateTimeLeft","timer","setTimeout","clearTimeout","memoizedClasses","children","Object","keys","map","interval","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/caspar/Desktop/static-website/src/components/countdown/Countdown.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { ICountdownClock, ICountdownProps } from 'types';\r\n\r\nexport const Countdown = ({\r\n  targetDate,\r\n  onEnd,\r\n  className: extraClasses = \"\",\r\n  size = \"md\",\r\n}: ICountdownProps): JSX.Element => {\r\n  \r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  const memoizedClasses = useMemo(\r\n    () =>\r\n      classNames(\r\n        // Add your base classes for the countdown timer here\r\n        \"rounded-lg font-bold justify-center text-center overflow-hidden transition\",\r\n        // Add a function to determine the size similar to buttonSizes if needed\r\n        extraClasses,\r\n      ),\r\n    [size, extraClasses],\r\n  );\r\n\r\n  return (\r\n    <div className={memoizedClasses}>\r\n      {\r\n      timeLeft \r\n        ? (\r\n          <div>\r\n            {\r\n              (Object.keys(timeLeft) as Array<keyof ICountdownClock>).map(interval => {\r\n                if (!timeLeft[interval] as unknown as string) {\r\n                  return \"00\";\r\n                }\r\n            \r\n                return (\r\n                  <span key={interval} className=\"text-2xl font-bold mx-1\">\r\n                    {timeLeft[interval] as unknown as string} {interval}\r\n                  </span>\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n        )\r\n        : <span>Time's up!</span>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EACxBC,UAAU;EACVC,KAAK;EACLC,SAAS,EAAEC,YAAY,GAAG,EAAE;EAC5BC,IAAI,GAAG;AACQ,CAAC,KAAkB;EAAAC,EAAA;EAGlC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACe,iBAAiB,CAAC,CAAC,CAAC;EAE7Dd,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BH,WAAW,CAACC,iBAAiB,CAAC,CAAC,CAAC;IAClC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,CAAC;EAEF,MAAMG,eAAe,GAAGjB,OAAO,CAC7B,MACEC,UAAU;EACR;EACA,4EAA4E;EAC5E;EACAO,YACF,CAAC,EACH,CAACC,IAAI,EAAED,YAAY,CACrB,CAAC;EAED,oBACEL,OAAA;IAAKI,SAAS,EAAEU,eAAgB;IAAAC,QAAA,EAE9BP,QAAQ,gBAEJR,OAAA;MAAAe,QAAA,EAEKC,MAAM,CAACC,IAAI,CAACT,QAAQ,CAAC,CAAkCU,GAAG,CAACC,QAAQ,IAAI;QACtE,IAAI,CAACX,QAAQ,CAACW,QAAQ,CAAC,EAAuB;UAC5C,OAAO,IAAI;QACb;QAEA,oBACEnB,OAAA;UAAqBI,SAAS,EAAC,yBAAyB;UAAAW,QAAA,GACrDP,QAAQ,CAACW,QAAQ,CAAC,EAAsB,GAAC,EAACA,QAAQ;QAAA,GAD1CA,QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CAAC;MAEX,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC,gBAENvB,OAAA;MAAAe,QAAA,EAAM;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExB,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtDWN,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAwDtB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}